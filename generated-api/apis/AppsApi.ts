/* tslint:disable */
/* eslint-disable */
/**
 * Hindeara API
 * API docs
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateAppDto,
} from '../models/index';
import {
    CreateAppDtoFromJSON,
    CreateAppDtoToJSON,
} from '../models/index';

export interface AppsControllerCreateRequest {
    createAppDto: CreateAppDto;
}

export interface AppsControllerFindOneRequest {
    id: number;
}

export interface AppsControllerUpdateRequest {
    id: number;
    body: object;
}

/**
 * 
 */
export class AppsApi extends runtime.BaseAPI {

    /**
     */
    async appsControllerCreateRaw(requestParameters: AppsControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['createAppDto'] == null) {
            throw new runtime.RequiredError(
                'createAppDto',
                'Required parameter "createAppDto" was null or undefined when calling appsControllerCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apps`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateAppDtoToJSON(requestParameters['createAppDto']),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async appsControllerCreate(requestParameters: AppsControllerCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.appsControllerCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appsControllerFindAllRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<object>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apps`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async appsControllerFindAll(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<object>> {
        const response = await this.appsControllerFindAllRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async appsControllerFindOneRaw(requestParameters: AppsControllerFindOneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling appsControllerFindOne().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/apps/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async appsControllerFindOne(requestParameters: AppsControllerFindOneRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.appsControllerFindOneRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appsControllerUpdateRaw(requestParameters: AppsControllerUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling appsControllerUpdate().'
            );
        }

        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling appsControllerUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/apps/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async appsControllerUpdate(requestParameters: AppsControllerUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.appsControllerUpdateRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
